{"version":3,"sources":["TipBox.js"],"names":["$","keyName","container","_showTip","e","$this","this","tipData","data","offset","ele","_createTip","opts","bind","_hideTip","orientation","top","left","width","height","css","stop","fadeIn","fadeOut","_checkAuto","attr","trim","toLowerCase","_findContentSize","content","cssClass","fakeSpan","appendTo","document","body","hide","addClass","position","display","border","padding","margin","html","wid","hgt","remove","_createPointer","size","color","_htmlData","pointer","pointer_in","border-top-color","border-left-color","border-bottom-color","bottom","border-right-color","right","options","wrap","box","rawSize","margin-top","margin-left","pointer_wid","pointer_hgt","wid_wrap","hgt_wrap","visibility","fn","tip","extend","defaults","arguments","length","each","oldTip","unbind","clone","max-width","max-height","border-radius","font-family","font-size","line-height","text-align","background-color","overflow","jQuery"],"mappings":"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","file":"TipBox.min.js","sourcesContent":["/************************************************ \r\nTip Box\r\nCopyright (c) 2014-2015 Dongxu Ren  http://www.rendxx.com/\r\n\r\nLicense: MIT (http://www.opensource.org/licenses/mit-license.php)\r\nVersion: 0.2.5\r\nUpdate: 2016-01-08\r\n\r\nDescription:\r\n    Add a tip box to the jQuery element. The tip box will show on mouse hover.\r\n    The tip is always point to the center of the element, and will be resized to fit the content.\r\n    \r\nCompatibility:\r\n    Chrome; Fire Fox; Safari; Edge; IE 9-11; *IE 7,8;\r\n \r\nDependency:\r\n    jQuery\r\n\r\nAPI:\r\n    [jQuery Element].tip(options)\r\n        - options:\r\n            content: ([jQuery element]/string) content of the tip, the old tip box(if exist) will be clear if content is empty\r\n            orientation: (string) top/left/bottom/right, default:top\r\n            margin: (number) distance between the tip box and the object element\r\n            offset: (number) offset the tipbox left / right from center position\r\n            cssClass: (string) name of css class, this css class will apply to the tip box\r\n            css: (object) the css apply to the tip box, rule is the same as $.css()\r\n\r\n    [jQuery Element].tip(content, orientation, options)\r\n        - content:  same as above\r\n        - orientation: same as above\r\n        - options:\r\n            margin: (number) distance between the tip box and the object element\r\n            offset: (number) offset the tipbox left / right from center position\r\n            cssClass: (string) name of css class, this css class will apply to the tip box\r\n            css: (object) the css apply to the tip box, rule is the same as $.css()\r\n\r\n    [jQuery Element].tip(content, orientation)\r\n        - content: same as above \r\n        - orientation: same as above \r\n\r\n    [jQuery Element].tip(content)\r\n        - content: same as above\r\n\r\n    [jQuery Element].tip()\r\n        clear tip\r\n\r\n************************************************/\r\n\r\n\r\n(function ($) {\r\n    \"use strict\";\r\n    // Setup\r\n    var keyName = \"Rtip\";\r\n    var fakeSpan = null;\r\n    var container = null;\r\n    // -------------------------------------------------------------------------\r\n    \r\n    // tip control -------------------------------------------------------------\r\n    var _showTip = function (e) {\r\n        var $this = $(this);\r\n        var tipData = $this.data(keyName);\r\n        if (tipData == null) return;\r\n        var offset = $this.offset();\r\n        if (tipData.ele == null) {\r\n            tipData.ele = _createTip(tipData.opts);\r\n            $this.bind('mouseleave', _hideTip);\r\n            tipData.orientation = tipData.opts.orientation;\r\n            delete tipData[\"opts\"];\r\n        }\r\n\r\n        var top = 0;\r\n        var left = 0;\r\n        var orientation = tipData.orientation;\r\n        if (orientation == \"top\") {\r\n            top = offset.top;\r\n            left = offset.left + $this.width() / 2;\r\n        } else if (orientation == \"bottom\") {\r\n            top = offset.top + $this.height();\r\n            left = offset.left + $this.width() / 2;\r\n        } else if (orientation == \"right\") {\r\n            top = offset.top + $this.height() / 2;\r\n            left = offset.left + $this.width();\r\n        } else if (orientation == \"left\") {\r\n            top = offset.top + $this.height() / 2;\r\n            left = offset.left;\r\n        }\r\n\r\n        tipData.ele.css({\r\n            top: top + \"px\",\r\n            left: left + \"px\"\r\n        });\r\n        tipData.ele.stop(true, true).fadeIn(100);\r\n    };\r\n\r\n    var _hideTip = function (e) {\r\n        var $this = $(this);\r\n        var tipData = $this.data(keyName);\r\n        if (tipData == null) return;\r\n        tipData.ele.stop(true, true).fadeOut(100);\r\n    };\r\n    // -------------------------------------------------------------------------\r\n    var _checkAuto = function (attr) {\r\n        if (attr == null || $.trim(attr).toLowerCase() == \"auto\") return true;\r\n        return false;\r\n    };\r\n\r\n    var _findContentSize = function (content, cssClass, css) {\r\n        var fakeSpan = null;\r\n        fakeSpan = $(\"<div>\").appendTo($(document.body)).hide();\r\n        if (css != null) fakeSpan.css(css);\r\n        if (cssClass != null) fakeSpan.addClass(cssClass);\r\n\r\n        fakeSpan.css({\r\n            \"position\": \"absolute\",\r\n            \"display\": \"none\",\r\n            \"border\": \"0\",\r\n            \"padding\": \"0\",\r\n            \"margin\": \"0\",\r\n            \"width\": _checkAuto(css.width)?\"auto\":null,\r\n            \"height\": \"auto\"\r\n        });\r\n        fakeSpan.html(content);\r\n\r\n        var wid = fakeSpan.width();\r\n        var hgt = fakeSpan.height();\r\n        fakeSpan.remove();\r\n        return [wid+1, hgt];\r\n    };\r\n\r\n    // tip html create --------------------------------------------------------------\r\n    var _createPointer = function (size, orientation, color) {\r\n        var container = $(_htmlData.pointer);\r\n        var pointer = $(_htmlData.pointer_in)\r\n            .css( 'border-width', size/2+'px')\r\n            .appendTo(container);\r\n\r\n        if (orientation == \"top\") {\r\n            container.width(size).height(size / 2);\r\n            pointer.css({\r\n                'border-top-color': color,\r\n                'left': 0,\r\n                'top': 0\r\n            });\r\n        } else if (orientation == \"left\") {\r\n            container.width(size / 2).height(size);\r\n            pointer.css({\r\n                'border-left-color': color,\r\n                'left': 0,\r\n                'top': 0\r\n            });\r\n        } else if (orientation == \"bottom\") {\r\n            container.width(size).height(size / 2);\r\n            pointer.css({\r\n                'border-bottom-color': color,\r\n                'left': 0,\r\n                'bottom': 0\r\n            });\r\n        } else if (orientation == \"right\") {\r\n            container.width(size / 2).height(size);\r\n            pointer.css({\r\n                'border-right-color': color,\r\n                'right': 0,\r\n                'top': 0\r\n            });\r\n        }\r\n\r\n        return container;\r\n    };\r\n    \r\n    // create tip element\r\n    var _createTip = function (options) {\r\n        /*\r\n         *      .----------------------------------.\r\n         *      |               wrap               |\r\n         *      | .------------------------------. |\r\n         *      | |             box              | |\r\n         *      | | .--------------------------. | |\r\n         *      | | |                          | | |\r\n         *      | | |         content          | | |\r\n         *      | | |                          | | |\r\n         *      | | '--------------------------' | |\r\n         *      | '------------------------------' |\r\n         *      |       pointer  \\/                |\r\n         *      '----------------------------------'\r\n         */\r\n\r\n        // create container for 1st time\r\n        if (container == null) container = $(_htmlData.container).appendTo($(document.body));\r\n\r\n        // create tip html\r\n        var wrap = $(_htmlData.wrap).appendTo(container);\r\n        var box = $(_htmlData.box).appendTo(wrap);\r\n        var content = $(_htmlData.content).appendTo(box);\r\n        var pointer = _createPointer(10, options.orientation, options.css[\"background-color\"]).appendTo(wrap);\r\n\r\n        // set content\r\n        var rawSize = _findContentSize(options.content, options.cssClass, options.css);\r\n        content.html(options.content).width(rawSize[0]).height(rawSize[1]);\r\n        content.css({\r\n            \"margin-top\": -rawSize[1]/2 + \"px\",\r\n            \"margin-left\": -rawSize[0]/2 + \"px\"\r\n        });\r\n\r\n        // set css\r\n        box.addClass(options.cssClass).css(options.css);\r\n        if (_checkAuto(options.css.width)) box.width(rawSize[0]);\r\n        if (_checkAuto(options.css.height)) box.height(rawSize[1]);\r\n\r\n        // adjust layout\r\n        var pointer_wid = pointer.width();\r\n        var pointer_hgt = pointer.height();\r\n        var wid_wrap = wrap.width();\r\n        var hgt_wrap = wrap.height();\r\n\r\n        box.css({\r\n            \"position\": \"absolute\"\r\n        });\r\n        wrap.width(1).height(1);\r\n\r\n        if (options.orientation == \"top\") {\r\n            pointer.css({\r\n                \"bottom\": \"0\",\r\n                \"left\": -pointer_wid / 2 + \"px\"\r\n            });\r\n            box.css({\r\n                \"left\": -wid_wrap / 2 + options[\"offset\"] + \"px\",\r\n                \"bottom\": pointer_hgt + \"px\"\r\n            });\r\n            wrap.css({\r\n                \"margin-top\": -options.margin + \"px\"\r\n            });\r\n        } else if (options.orientation == \"bottom\") {\r\n            pointer.css({\r\n                \"top\": \"0\",\r\n                \"left\": -pointer_wid / 2 + \"px\"\r\n            });\r\n            box.css({\r\n                \"top\": pointer_hgt + \"px\",\r\n                \"left\": -wid_wrap / 2 + options[\"offset\"] + \"px\"\r\n            });\r\n            wrap.css({\r\n                \"margin-top\": options.margin + \"px\"\r\n            });\r\n        } else if (options.orientation == \"left\") {\r\n            pointer.css({\r\n                \"top\": -pointer_hgt / 2 + \"px\",\r\n                \"right\":\"0\"\r\n            });\r\n            box.css({\r\n                \"top\": -hgt_wrap / 2 + options[\"offset\"] + \"px\",\r\n                \"right\": pointer_wid + \"px\"\r\n            });\r\n            wrap.css({\r\n                \"margin-left\": -options.margin + \"px\"\r\n            });\r\n        } else if (options.orientation == \"right\") {\r\n            pointer.css({\r\n                \"top\": -pointer_hgt / 2 + \"px\",\r\n                \"left\": \"0\"\r\n            });\r\n            box.css({\r\n                \"top\": \"0px\",\r\n                \"left\": \"0px\",\r\n                \"margin-top\": -hgt_wrap / 2 + options[\"offset\"] + \"px\",\r\n                \"margin-left\": pointer_wid + \"px\"\r\n            });\r\n            wrap.css({\r\n                \"margin-left\": options.margin + \"px\"\r\n            });\r\n        }\r\n\r\n        // final setup\r\n        wrap.hide();\r\n        wrap.css({\r\n            \"visibility\": \"visible\"\r\n        });\r\n\r\n        return wrap;\r\n    };\r\n\r\n    // html element\r\n    var _htmlData = {\r\n        'container': '<div style=\"width:1px; height:1px; position:absolute; top:0; left:0; overflow:visible; z-index: 999999;\"></div>',\r\n        'wrap': '<div style=\"width:auto; height:auto; position:absolute; top:0; left:0; overflow:visible;\"></div>',\r\n        'box': '<div style=\"width:auto; height:auto; position:relative; overflow:visible; margin:0; border:0;\"></div>',\r\n        'content': '<div style=\"width:auto; height:auto; position:absolute; top:50%; left:50%; overflow:visible; display: block;\"></div>',\r\n        'pointer': '<div style=\"width:auto; height:auto; position:absolute; overflow:hidden;\"></div>',\r\n        'pointer_in': '<div style=\"width:0; height:0; border:10px solid transparent; position:absolute;\"></div>'\r\n    };\r\n    // -------------------------------------------------------------------------\r\n    \r\n    $.fn.tip = function () {\r\n        // handle arguements\r\n        var options = $.extend(true, {}, $.fn.tip.defaults);\r\n        if (arguments.length == 0) {   // No argument: clear tip\r\n            options = null;\r\n        } else if (arguments.length == 1) {\r\n            if (arguments[0] == null) {\r\n                options = null;\r\n            } else if (typeof arguments[0] == 'string' || (typeof arguments[0] == 'object' && arguments[0] instanceof $)) { // [content]\r\n                options.content = arguments[0];\r\n            } else if (typeof arguments[0] == 'object') { // [opts]\r\n                $.extend(true, options, arguments[0]);\r\n            } else { // error\r\n                return; \r\n            }\r\n        } else if (arguments.length == 2) { // [content, orientation]\r\n            options.content = arguments[0];\r\n            options.orientation = arguments[1];\r\n        } else if (arguments.length == 3) { // [content, orientation, opts]\r\n            options.content = arguments[0];\r\n            options.orientation = arguments[1];\r\n            $.extend(true, options, arguments[2]);\r\n        } else { // illegal arguments          \r\n            return;\r\n        }\r\n\r\n        this.each(function () {\r\n            var $this = $(this);\r\n            // remove old tip & hover function\r\n            var oldTip = $this.data(keyName);\r\n            if (oldTip != null && oldTip.ele != null) oldTip.ele.remove();\r\n            $this.unbind('mouseenter', _showTip).unbind('mouseleave', _hideTip);\r\n            if (options == null || options.content == null || options.content == \"\") return;\r\n            if (typeof options.content == 'object' && options.content instanceof $) options.content = options.content.clone(true);\r\n            // create new tip & hover function\r\n            $this.data(keyName, {ele:null, opts:options});\r\n            $this.bind('mouseenter',  _showTip);\r\n            //if (window.event && $this.contains(window.event.srcElement)) $this.mouseenter()\r\n        });\r\n\r\n        return this;\r\n    };\r\n\r\n    $.fn.tip.defaults = {\r\n        \"content\": \"\",\r\n        \"orientation\": \"top\",\r\n        \"margin\": 10,\r\n        \"offset\": 0,\r\n        \"cssClass\": null,\r\n        \"css\": {\r\n            \"width\": null,\r\n            \"height\": null,\r\n            \"max-width\": \"600px\",\r\n            \"max-height\": \"600px\",\r\n            \"border-radius\": \"3px\",\r\n            \"color\": \"#eee\",\r\n            \"font-family\": \"Arail\",\r\n            \"font-size\": \"12px\",\r\n            \"line-height\": \"16px\",\r\n            \"text-align\": \"center\",\r\n            \"background-color\": \"#333\",\r\n            \"overflow\": \"hidden\",\r\n            \"padding\": \"10px\"\r\n        }\r\n    };\r\n})(jQuery);"],"sourceRoot":"/source/"}
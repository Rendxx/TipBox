{"version":3,"sources":["TipBox.js"],"names":["$","keyName","container","_showTip","e","$this","this","tipData","data","offset","ele","_createTip","opts","top","left","orientation","width","height","css","stop","fadeIn","_hideTip","fadeOut","_checkAuto","attr","trim","toLowerCase","_findContentSize","content","cssClass","fakeSpan","appendTo","document","body","hide","addClass","position","display","border","padding","margin","html","wid","hgt","remove","_createPointer","bottom","reduce","init_w","init_h","reduce_w","reduce_h","init_t","init_l","offset_t","offset_l","round","Math","floor","_htmlData","pointer","i","line","append","options","wrap","box","rawSize","margin-top","margin-left","eles","children","l","length","pointer_wid","pointer_hgt","wid_wrap","hgt_wrap","right","visibility","fn","tip","extend","defaults","arguments","each","oldTip","unbind","bind","max-width","max-height","border-radius","color","font-family","font-size","line-height","text-align","background-color","overflow","jQuery"],"mappings":"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","file":"TipBox.min.js","sourcesContent":["/************************************************ \r\nTip Box\r\nCopyright (c) 2014-2015 Dongxu Ren  http://www.rendxx.com/\r\n\r\nLicense: MIT (http://www.opensource.org/licenses/mit-license.php)\r\nVersion: 0.2.2\r\nUpdate: 2015-09-30\r\n\r\nDescription:\r\n    Add a tip box to the jQuery element. The tip box will show on mouse hover.\r\n    The tip is always point to the center of the element, and will be resized to fit the content.\r\n    \r\nCompatibility:\r\n    Chrome; Fire Fox; Safari; Edge; IE 9-11; *IE 7,8;\r\n \r\nDependency:\r\n    jQuery\r\n\r\nAPI:\r\n    [jQuery Element].tip(options)\r\n        - options:\r\n            content: ([jQuery element]/string) content of the tip, the old tip box(if exist) will be clear if content is empty\r\n            orientation: (string) top/left/bottom/right, default:top\r\n            margin: (number) distance between the tip box and the object element\r\n            offset: (number) offset the tipbox left / right from center position\r\n            cssClass: (string) name of css class, this css class will apply to the tip box\r\n            css: (object) the css apply to the tip box, rule is the same as $.css()\r\n\r\n    [jQuery Element].tip(content, orientation, options)\r\n        - content:  same as above\r\n        - orientation: same as above\r\n        - options:\r\n            margin: (number) distance between the tip box and the object element\r\n            offset: (number) offset the tipbox left / right from center position\r\n            cssClass: (string) name of css class, this css class will apply to the tip box\r\n            css: (object) the css apply to the tip box, rule is the same as $.css()\r\n\r\n    [jQuery Element].tip(content, orientation)\r\n        - content: same as above \r\n        - orientation: same as above \r\n\r\n    [jQuery Element].tip(content)\r\n        - content: same as above\r\n\r\n    [jQuery Element].tip()\r\n        clear tip\r\n\r\n************************************************/\r\n\r\n\r\n(function ($) {\r\n    \"use strict\";\r\n    // Setup\r\n    var keyName = \"Rtip\";\r\n    var fakeSpan = null;\r\n    var container = null;\r\n    // -------------------------------------------------------------------------\r\n    \r\n    // tip control -------------------------------------------------------------\r\n    var _showTip = function (e) {\r\n        var $this = $(this);\r\n        var tipData = $this.data(keyName);\r\n        if (tipData == null) return;\r\n        var offset = $this.offset();\r\n        if (tipData.ele == null) {\r\n            tipData.ele = _createTip(tipData.opts);\r\n            delete tipData[\"opts\"];\r\n        }\r\n\r\n        var top = 0;\r\n        var left = 0;\r\n        if (tipData.orientation == \"top\") {\r\n            top = offset.top;\r\n            left = offset.left + $this.width() / 2;\r\n        } else if (tipData.orientation == \"bottom\") {\r\n            top = offset.top + $this.height();\r\n            left = offset.left + $this.width() / 2;\r\n        } else if (tipData.orientation == \"right\") {\r\n            top = offset.top + $this.height() / 2;\r\n            left = offset.left + $this.width();\r\n        } else if (tipData.orientation == \"left\") {\r\n            top = offset.top + $this.height() / 2;\r\n            left = offset.left;\r\n        }\r\n\r\n        tipData.ele.css({\r\n            top: top + \"px\",\r\n            left: left + \"px\"\r\n        });\r\n        tipData.ele.stop(true, true).fadeIn(100);\r\n    };\r\n\r\n    var _hideTip = function (e) {\r\n        var $this = $(this);\r\n        var tipData = $this.data(keyName);\r\n        if (tipData == null) return;\r\n        tipData.ele.stop(true, true).fadeOut(100);\r\n    };\r\n    // -------------------------------------------------------------------------\r\n    var _checkAuto = function (attr) {\r\n        if (attr == null || $.trim(attr).toLowerCase() == \"auto\") return true;\r\n        return false;\r\n    };\r\n\r\n    var _findContentSize = function (content, cssClass, css) {\r\n        var fakeSpan = null;\r\n        fakeSpan = $(\"<div>\").appendTo($(document.body)).hide();\r\n        if (css != null) fakeSpan.css(css);\r\n        if (cssClass != null) fakeSpan.addClass(cssClass);\r\n\r\n        fakeSpan.css({\r\n            \"position\": \"absolute\",\r\n            \"display\": \"none\",\r\n            \"border\": \"0\",\r\n            \"padding\": \"0\",\r\n            \"margin\": \"0\",\r\n            \"width\": _checkAuto(css.width)?\"auto\":null,\r\n            \"height\": \"auto\"\r\n        });\r\n        fakeSpan.html(content);\r\n\r\n        var wid = fakeSpan.width();\r\n        var hgt = fakeSpan.height();\r\n        fakeSpan.remove();\r\n        return [wid+1, hgt];\r\n    };\r\n\r\n    // tip html create --------------------------------------------------------------\r\n    var _createPointer = function (bottom, reduce, orientation) {\r\n        var init_w = 0;       // initial width\r\n        var init_h = 0;       // initial height\r\n        var reduce_w = 0;     // reduced width for each step\r\n        var reduce_h = 0;     // reduced height for each step\r\n        var init_t = 0;       // initial top for each step\r\n        var init_l = 0;       // initial left for each step\r\n        var offset_t = 0;     // offset top for each step\r\n        var offset_l = 0;     // offset left for each step\r\n\r\n        var round = Math.floor((bottom + 1) / (2 * reduce));\r\n        var container = $(_htmlData.pointer);\r\n        if (orientation == \"top\") {\r\n            init_w = bottom;\r\n            init_h = 1;\r\n            reduce_w = reduce * 2;\r\n            reduce_h = 0;\r\n            init_t = 0;\r\n            init_l = 0;\r\n            offset_t = 1;\r\n            offset_l = 1;\r\n        } else if (orientation == \"left\") {\r\n            init_w = 1;\r\n            init_h = bottom;\r\n            reduce_w = 0;\r\n            reduce_h = reduce * 2;\r\n            init_t = 0;\r\n            init_l = 0;\r\n            offset_t = 1;\r\n            offset_l = 1;\r\n        } else if (orientation == \"bottom\") {\r\n            init_w = bottom;\r\n            init_h = 1;\r\n            reduce_w = reduce * 2;\r\n            reduce_h = 0;\r\n            init_t = round - 1;\r\n            init_l = 0;\r\n            offset_t = -1;\r\n            offset_l = 1;\r\n        } else if (orientation == \"right\") {\r\n            init_w = 1;\r\n            init_h = bottom;\r\n            reduce_w = 0;\r\n            reduce_h = reduce * 2;\r\n            init_t = 0;\r\n            init_l = round - 1;\r\n            offset_t = 1;\r\n            offset_l = -1;\r\n        }\r\n\r\n        if (init_w > 1)\r\n            container.width(bottom).height(round);\r\n        else\r\n            container.width(round).height(bottom);\r\n\r\n        for (var i = 0; i < round; i++) {\r\n            var line = $(\"<div></div>\");\r\n            container.append(line);\r\n            line.css({\r\n                position: \"absolute\",\r\n                width: init_w,\r\n                height: init_h,\r\n                top: init_t,\r\n                left: init_l\r\n            });\r\n            init_w -= reduce_w;\r\n            init_h -= reduce_h;\r\n            init_t += offset_t;\r\n            init_l += offset_l;\r\n        }\r\n        return container;\r\n    };\r\n    \r\n    // create tip element\r\n    var _createTip = function (options) {\r\n        /*\r\n         *      .----------------------------------.\r\n         *      |               wrap               |\r\n         *      | .------------------------------. |\r\n         *      | |             box              | |\r\n         *      | | .--------------------------. | |\r\n         *      | | |                          | | |\r\n         *      | | |         content          | | |\r\n         *      | | |                          | | |\r\n         *      | | '--------------------------' | |\r\n         *      | '------------------------------' |\r\n         *      |       pointer  \\/                |\r\n         *      '----------------------------------'\r\n         */\r\n\r\n        // create container for 1st time\r\n        if (container == null) container = $(_htmlData.container).appendTo($(document.body));\r\n\r\n        // create tip html\r\n        var wrap = $(_htmlData.wrap).appendTo(container);\r\n        var box = $(_htmlData.box).appendTo(wrap);\r\n        var content = $(_htmlData.content).appendTo(box);\r\n        var pointer = _createPointer(10, 1, options.orientation).appendTo(wrap);\r\n\r\n        // set content\r\n        var rawSize = _findContentSize(options.content, options.cssClass, options.css);\r\n        content.html(options.content).width(rawSize[0]).height(rawSize[1]);\r\n        content.css({\r\n            \"margin-top\": -rawSize[1]/2 + \"px\",\r\n            \"margin-left\": -rawSize[0]/2 + \"px\"\r\n        });\r\n\r\n        // set css\r\n        box.addClass(options.cssClass).css(options.css);\r\n        if (_checkAuto(options.css.width)) box.width(rawSize[0]);\r\n        if (_checkAuto(options.css.height)) box.height(rawSize[1]);\r\n        for (var i = 0, eles = pointer.children(\"div\"), l = eles.length; i < l ; i++)\r\n            $(eles[i]).css(\"background-color\", options.css[\"background-color\"]);\r\n\r\n        // adjust layout\r\n        var pointer_wid = pointer.width();\r\n        var pointer_hgt = pointer.height();\r\n        var wid_wrap = wrap.width();\r\n        var hgt_wrap = wrap.height();\r\n\r\n        box.css({\r\n            \"position\": \"absolute\"\r\n        });\r\n        wrap.width(1).height(1);\r\n\r\n        if (options.orientation == \"top\") {\r\n            pointer.css({\r\n                \"bottom\": \"0\",\r\n                \"left\": -pointer_wid / 2 + \"px\"\r\n            });\r\n            box.css({\r\n                \"left\": -wid_wrap / 2 + options[\"offset\"] + \"px\",\r\n                \"bottom\": pointer_hgt + \"px\"\r\n            });\r\n            wrap.css({\r\n                \"margin-top\": -options.margin + \"px\"\r\n            });\r\n        } else if (options.orientation == \"bottom\") {\r\n            pointer.css({\r\n                \"top\": \"0\",\r\n                \"left\": -pointer_wid / 2 + \"px\"\r\n            });\r\n            box.css({\r\n                \"top\": pointer_hgt + \"px\",\r\n                \"left\": -wid_wrap / 2 + options[\"offset\"] + \"px\"\r\n            });\r\n            wrap.css({\r\n                \"margin-top\": options.margin + \"px\"\r\n            });\r\n        } else if (options.orientation == \"left\") {\r\n            pointer.css({\r\n                \"top\": -pointer_hgt / 2 + \"px\",\r\n                \"right\":\"0\"\r\n            });\r\n            box.css({\r\n                \"top\": -hgt_wrap / 2 + options[\"offset\"] + \"px\",\r\n                \"right\": pointer_wid + \"px\"\r\n            });\r\n            wrap.css({\r\n                \"margin-left\": -options.margin + \"px\"\r\n            });\r\n        } else if (options.orientation == \"right\") {\r\n            pointer.css({\r\n                \"top\": -pointer_hgt / 2 + \"px\",\r\n                \"left\": \"0\"\r\n            });\r\n            box.css({\r\n                \"top\": \"0px\",\r\n                \"left\": \"0px\",\r\n                \"margin-top\": -hgt_wrap / 2 + options[\"offset\"] + \"px\",\r\n                \"margin-left\": pointer_wid + \"px\"\r\n            });\r\n            wrap.css({\r\n                \"margin-left\": options.margin + \"px\"\r\n            });\r\n        }\r\n\r\n        // final setup\r\n        wrap.hide();\r\n        wrap.css({\r\n            \"visibility\": \"visible\"\r\n        });\r\n\r\n        return wrap;\r\n    };\r\n\r\n    // html element\r\n    var _htmlData = {\r\n        'container': '<div style=\"width:1px; height:1px; position:absolute; top:0; left:0; overflow:visible; z-index: 999;\"></div>',\r\n        'wrap': '<div style=\"width:auto; height:auto; position:absolute; top:0; left:0; overflow:visible;\"></div>',\r\n        'box': '<div style=\"width:auto; height:auto; position:relative; overflow:visible; margin:0; border:0;\"></div>',\r\n        'content': '<div style=\"width:auto; height:auto; position:absolute; top:50%; left:50%; overflow:visible; display: block;\"></div>',\r\n        'pointer': '<div style=\"width:auto; height:auto; position:absolute;\"></div>'\r\n    };\r\n    // -------------------------------------------------------------------------\r\n    \r\n    $.fn.tip = function () {\r\n        // handle arguements\r\n        var options = $.extend(true, {}, $.fn.tip.defaults);\r\n        if (arguments.length == 0) {   // No argument: clear tip\r\n            options = null;\r\n        } else if (arguments.length == 1) {\r\n            if (arguments[0] == null) {\r\n                options = null;\r\n            } else if (typeof arguments[0] == 'string' || (typeof arguments[0] == 'object' && arguments[0] instanceof $)) { // [content]\r\n                options.content = arguments[0];\r\n            } else if (typeof arguments[0] == 'object') { // [opts]\r\n                $.extend(true, options, arguments[0]);\r\n            } else { // error\r\n                return; \r\n            }\r\n        } else if (arguments.length == 2) { // [content, orientation]\r\n            options.content = arguments[0];\r\n            options.orientation = arguments[1];\r\n        } else if (arguments.length == 3) { // [content, orientation, opts]\r\n            options.content = arguments[0];\r\n            options.orientation = arguments[1];\r\n            $.extend(true, options, arguments[2]);\r\n        } else { // illegal arguments          \r\n            return;\r\n        }\r\n\r\n        this.each(function () {\r\n            var $this = $(this);\r\n            // remove old tip & hover function\r\n            var oldTip = $this.data(keyName);\r\n            if (oldTip != null && oldTip.ele != null) oldTip.ele.remove();\r\n            $this.unbind('mouseenter', _showTip).unbind('mouseleave', _hideTip);\r\n            if (options == null || options.content == null || options.content == \"\") return;\r\n            // create new tip & hover function\r\n            $this.data(keyName, {ele:null, opts:options, orientation: options.orientation});\r\n            $this.bind('mouseenter',  _showTip);\r\n            $this.bind('mouseleave', _hideTip);\r\n            //if (window.event && $this.contains(window.event.srcElement)) $this.mouseenter()\r\n        });\r\n\r\n        return this;\r\n    };\r\n\r\n    $.fn.tip.defaults = {\r\n        \"content\": \"\",\r\n        \"orientation\": \"top\",\r\n        \"margin\": 10,\r\n        \"offset\": 0,\r\n        \"cssClass\": null,\r\n        \"css\": {\r\n            \"width\": null,\r\n            \"height\": null,\r\n            \"max-width\": \"600px\",\r\n            \"max-height\": \"600px\",\r\n            \"border-radius\": \"3px\",\r\n            \"color\": \"#eee\",\r\n            \"font-family\": \"Arail\",\r\n            \"font-size\": \"12px\",\r\n            \"line-height\": \"16px\",\r\n            \"text-align\": \"center\",\r\n            \"background-color\": \"#333\",\r\n            \"overflow\": \"hidden\",\r\n            \"padding\": \"10px\"\r\n        }\r\n    };\r\n})(jQuery);"],"sourceRoot":"/source/"}